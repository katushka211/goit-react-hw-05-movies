{"version":3,"file":"static/js/681.65a733ec.chunk.js","mappings":"yNAwCA,UApCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMN,GAAN,iGAEUO,EAAAA,EAAAA,IAAgBP,GAF1B,OAETQ,EAFS,OAGfJ,EAAWI,GAHI,gDAKfC,QAAQC,IAAR,MALe,yDAAH,sDAShBJ,EAAWN,EACZ,GAAE,CAACA,KAGF,iBAAKW,UAAU,aAAf,WACE,wBAAI,YAEHR,EAAQS,QACP,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,uBAAG,+CAIV,C,+LCrCKC,EAAU,+BACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAiCC,EAAjC,+BAAwC,EAAxC,SAEGC,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,oCACiBG,GACtC,CAAEC,OAAAA,IARD,cAMGI,EANH,yBAUIA,EAASC,KAAKC,SAVlB,gCAYHnB,QAAQC,IAAR,MAZG,iFAgBA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFAEGR,EAAS,CACbC,QAASJ,EACTK,SAAU,QACVO,MAAOD,EACPT,KAAM,GANL,SAQoBI,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAAsC,CAAEI,OAAAA,IAR5D,cAQGI,EARH,yBASIA,EAASC,KAAKC,SATlB,gCAWHnB,QAAQC,IAAR,MAXG,gFAeA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA8BD,EAA9B,KAAqC,CAAEK,OAAAA,IAN3D,cAMGI,EANH,yBAOIA,EAASC,MAPb,gCASHlB,QAAQC,IAAR,MATG,gFAaA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhB,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA8BD,EAA9B,aAA6C,CAClEK,OAAAA,IAPC,cAMGI,EANH,yBASIA,EAASC,KAAKO,MATlB,gCAWHzB,QAAQC,IAAR,MAXG,gFAeA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA+BU,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,QACVH,KAAM,GALL,SAOoBI,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA8BD,EAA9B,aAA6C,CAClEK,OAAAA,IARC,cAOGI,EAPH,yBAUIA,EAASC,KAAKC,SAVlB,gCAYHnB,QAAQC,IAAR,MAZG,gF","sources":["components/Reviews.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/fetchMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const reviewData = await getMovieReviews(movieId);\n        setReviews(reviewData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <div className=\"reviewWrap\">\n      <h3>Reviews</h3>\n\n      {reviews.length ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '79a2e1dc126f87040f8de2557416f9fd';\n\nexport async function getMoviesTrending(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${API_URL}/trending/movie/day?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/search/movie?`, { params });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}?`, { params });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","getMovieReviews","reviewData","console","log","className","length","map","review","author","content","id","API_URL","API_KEY","getMoviesTrending","page","params","api_key","language","axios","response","data","results","getMoviesByName","name","query","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}