{"version":3,"file":"static/js/367.63c1cf56.chunk.js","mappings":"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","sources":["components/Loader.jsx","components/MoviesGallery/MoviesGallery.jsx","pages/Home/Home.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div>\n      <Vortex\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['blue', 'yellow', 'blue', 'yellow', 'blue', 'yellow']}\n      />\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport './moviesGallery.css';\n\nexport const MoviesGallery = ({ movies, state }) => {\n  return (\n    <div>\n      <ul className=\"gallery\">\n        {movies.map(movie => (\n          <li key={movie.id} className=\"gallery-item\">\n            <Link to={`/movies/${movie.id}`} state={state}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMoviesTrending } from 'services/fetchMovies';\nimport { Loader } from 'components/Loader';\nimport './home.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const movies = await getMoviesTrending();\n        setMovies([...movies]);\n        setIsLoading(true);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n  return (\n    <main>\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <div>\n          <h1 className=\"home-title\">Trending today</h1>\n          <MoviesGallery movies={movies} state={{ from: location }} />\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '79a2e1dc126f87040f8de2557416f9fd';\n\nexport async function getMoviesTrending(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${API_URL}/trending/movie/day?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/search/movie?`, { params });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}?`, { params });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MoviesGallery","movies","state","className","map","movie","to","id","title","useState","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","getMovies","getMoviesTrending","console","log","from","API_URL","API_KEY","page","params","api_key","language","axios","response","data","results","getMoviesByName","name","query","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}