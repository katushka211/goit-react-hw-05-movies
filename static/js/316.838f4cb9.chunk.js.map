{"version":3,"file":"static/js/316.838f4cb9.chunk.js","mappings":"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","sources":["components/MoviesGalleryItem.jsx","pages/MovieDetails.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nexport const MoviesGalleryItem = ({ movie }) => {\n  const location = useLocation();\n\n  let genres = '';\n  if (Array.isArray(movie.genres) && movie.genres.length > 0) {\n    genres = movie.genres.map(genre => genre.name).join(', ');\n  }\n\n  const releaseYear = new Date(movie.release_date).getFullYear();\n  const poster = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w400/${movie.poster_path}`\n    : 'https://placehold.co/600x400?text=Not+Available';\n\n  const userScore = movie.vote_average\n    ? `${(movie.vote_average * 10).toFixed(0)}%`\n    : 'Not available';\n\n  return (\n    <>\n      <div className=\"card\">\n        <img className=\"poster\" src={poster} alt={movie.original_title} />\n        <div className=\"movie-info\">\n          <h2 className=\"title\">\n            {movie.original_title ?? 'Unknown'}({releaseYear})\n          </h2>\n          <p className=\"user-score\">User Score: {userScore}</p>\n          <h3>Overview</h3>\n          <p className=\"overview\">{movie.overview}</p>\n          <h3>Genres</h3>\n          <p className=\"genres\">{genres}</p>\n        </div>\n      </div>\n      <div className=\"additional-info\">\n        <h3>Aditional Information</h3>\n        <ul className=\"links\">\n          <li className=\"link-item\">\n            <Link\n              className=\"link-details\"\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li className=\"link-item\">\n            <Link\n              className=\"link-details\"\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/fetchMovies';\nimport { Link } from 'react-router-dom';\nimport { IoArrowBackOutline } from 'react-icons/io5';\nimport { MoviesGalleryItem } from 'components/MoviesGalleryItem';\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  useEffect(() => {\n    const getSelectedMovie = async movieId => {\n      try {\n        const movie = await getMovieDetails(movieId);\n        setSelectedMovie(movie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getSelectedMovie(movieId);\n  }, [movieId]);\n  return (\n    <main>\n      <div>\n        <Link to={location?.state?.from ?? '/'}>\n          <button className=\"glow-on-hover\">\n            <IoArrowBackOutline\n              style={{ width: '25px', height: '25px', display: 'inline-block' }}\n            />\n            Go back\n          </button>\n        </Link>\n        <MoviesGalleryItem movie={selectedMovie} />\n        <Outlet />\n      </div>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '79a2e1dc126f87040f8de2557416f9fd';\n\nexport async function getMoviesTrending(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${API_URL}/trending/movie/day?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/search/movie?`, { params });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}?`, { params });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MoviesGalleryItem","movie","location","useLocation","genres","Array","isArray","length","map","genre","name","join","releaseYear","Date","release_date","getFullYear","poster","poster_path","userScore","vote_average","toFixed","className","src","alt","original_title","overview","to","state","from","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","getSelectedMovie","getMovieDetails","console","log","style","width","height","display","API_URL","API_KEY","getMoviesTrending","page","params","api_key","language","axios","response","data","results","getMoviesByName","query","id","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}