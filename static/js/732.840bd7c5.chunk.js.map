{"version":3,"file":"static/js/732.840bd7c5.chunk.js","mappings":"+PAmDA,EA9Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMN,GAAN,iGAEOO,EAAAA,EAAAA,IAAgBP,GAFvB,OAENG,EAFM,OAGZC,EAAQD,GAHI,gDAKZK,QAAQC,IAAR,MALY,yDAAH,sDAQbH,EAAQN,EACT,GAAE,CAACA,KAEF,iBAAKU,UAAU,YAAf,WACE,wBAAI,SACHP,EAAKQ,QACJ,eAAID,UAAU,YAAd,SACGP,EAAKS,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAU,aAAd,UACGG,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAG,UAAKH,EAAMI,KAAX,eAGL,gBACEF,IAAG,oDACHC,IAAG,UAAKH,EAAMI,KAAX,eAGP,4BACE,wBAAKJ,EAAMI,QACX,yBAAG,cAAYJ,EAAMK,kBAdOL,EAAMM,GADzB,OAqBjB,uBAAG,4CAIV,C,+LChDKC,EAAU,+BACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAiCC,EAAjC,+BAAwC,EAAxC,SAEGC,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,oCACiBG,GACtC,CAAEC,OAAAA,IARD,cAMGI,EANH,yBAUIA,EAASC,KAAKC,SAVlB,gCAYHtB,QAAQC,IAAR,MAZG,iFAgBA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,yFAEGO,EAAS,CACbC,QAASJ,EACTK,SAAU,QACVM,MAAOf,EACPM,KAAM,GANL,SAQoBI,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAAsC,CAAEI,OAAAA,IAR5D,cAQGI,EARH,yBASIA,EAASC,KAAKC,SATlB,gCAWHtB,QAAQC,IAAR,MAXG,gFAeA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA8BD,EAA9B,KAAqC,CAAEK,OAAAA,IAN3D,cAMGI,EANH,yBAOIA,EAASC,MAPb,gCASHrB,QAAQC,IAAR,MATG,gFAaA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BY,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA8BD,EAA9B,aAA6C,CAClEK,OAAAA,IAPC,cAMGI,EANH,yBASIA,EAASC,KAAK1B,MATlB,gCAWHK,QAAQC,IAAR,MAXG,gFAeA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,QACVH,KAAM,GALL,SAOoBI,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA8BD,EAA9B,aAA6C,CAClEK,OAAAA,IARC,cAOGI,EAPH,yBAUIA,EAASC,KAAKC,SAVlB,gCAYHtB,QAAQC,IAAR,MAZG,gF","sources":["components/Cast/Cast.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/fetchMovies';\nimport './cast.css';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async movieId => {\n      try {\n        const cast = await getMovieCredits(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast(movieId);\n  }, [movieId]);\n  return (\n    <div className=\"cast-wrap\">\n      <h3>Cast</h3>\n      {cast.length ? (\n        <ul className=\"cast-list\">\n          {cast.map(actor => (\n            <li className=\"actor-item\" key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <img\n                  src={`https://via.placeholder.com/180x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n              <div>\n                <h3>{actor.name}</h3>\n                <p>Character: {actor.character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any cast for this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '79a2e1dc126f87040f8de2557416f9fd';\n\nexport async function getMoviesTrending(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${API_URL}/trending/movie/day?page=${page}`,\n      { params }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByName(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/search/movie?`, { params });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}?`, { params });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${API_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCast","getMovieCredits","console","log","className","length","map","actor","profile_path","src","alt","name","character","id","API_URL","API_KEY","getMoviesTrending","page","params","api_key","language","axios","response","data","results","getMoviesByName","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}